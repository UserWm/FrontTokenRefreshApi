{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwill\\\\Desktop\\\\jwt-auth-client\\\\FrontClientApi\\\\FrontTokenRefreshApi\\\\src\\\\components\\\\Protected.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Protected = ({\n  tokens,\n  setTokens\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const fetchProtectedData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/private', {\n        headers: {\n          Authorization: `Bearer ${tokens.accessToken}`\n        }\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      if (error.response.status === 401) {\n        try {\n          const refreshResponse = await axios.post('http://localhost:5000/api/auth/refresh-token', {\n            token: tokens.refreshToken\n          });\n          const {\n            accessToken\n          } = refreshResponse.data;\n          setTokens({\n            ...tokens,\n            accessToken\n          });\n        } catch (refreshError) {\n          console.error('Error al refrescar el token', refreshError);\n        }\n      } else {\n        console.error(error);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchProtectedData();\n  }, [tokens]);\n  const handleLogout = () => {\n    // Eliminar tokens de localStorage y actualizar el estado de tokens\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setTokens(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Protected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Protected, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = Protected;\nexport default Protected;\nvar _c;\n$RefreshReg$(_c, \"Protected\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Protected","tokens","setTokens","_s","message","setMessage","fetchProtectedData","response","get","headers","Authorization","accessToken","data","error","status","refreshResponse","post","token","refreshToken","refreshError","console","handleLogout","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jwill/Desktop/jwt-auth-client/FrontClientApi/FrontTokenRefreshApi/src/components/Protected.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Protected = ({ tokens, setTokens }) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const fetchProtectedData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/private', {\r\n        headers: {\r\n          Authorization: `Bearer ${tokens.accessToken}`\r\n        }\r\n      });\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        try {\r\n          const refreshResponse = await axios.post('http://localhost:5000/api/auth/refresh-token', {\r\n            token: tokens.refreshToken\r\n          });\r\n          const { accessToken } = refreshResponse.data;\r\n          setTokens({ ...tokens, accessToken });\r\n        } catch (refreshError) {\r\n          console.error('Error al refrescar el token', refreshError);\r\n        }\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProtectedData();\r\n  }, [tokens]);\r\n\r\n  const handleLogout = () => {\r\n    // Eliminar tokens de localStorage y actualizar el estado de tokens\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    setTokens(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Protected</h2>\r\n      <p>{message}</p>\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Protected;\r\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,EAAE;QACpEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,MAAM,CAACU,WAAW;QAC7C;MACF,CAAC,CAAC;MACFN,UAAU,CAACE,QAAQ,CAACK,IAAI,CAACR,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACd,IAAIA,KAAK,CAACN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QACjC,IAAI;UACF,MAAMC,eAAe,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,8CAA8C,EAAE;YACvFC,KAAK,EAAEhB,MAAM,CAACiB;UAChB,CAAC,CAAC;UACF,MAAM;YAAEP;UAAY,CAAC,GAAGI,eAAe,CAACH,IAAI;UAC5CV,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEU;UAAY,CAAC,CAAC;QACvC,CAAC,CAAC,OAAOQ,YAAY,EAAE;UACrBC,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEM,YAAY,CAAC;QAC5D;MACF,CAAC,MAAM;QACLC,OAAO,CAACP,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdU,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,MAAMoB,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;IACtCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;IACvCrB,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACEH,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB7B,OAAA;MAAAyB,QAAA,EAAIpB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB7B,OAAA;MAAQ8B,OAAO,EAAER,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9CIH,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}